https://github.com/Yashwanth-Chennu

problem statement:https://www.hackerrank.com/challenges/small-triangles-large-triangles/problem

solution:

#include <stdio.h>
#include <stdlib.h>
#include <math.h>

struct triangle
{
	int a;
	int b;
	int c;
};

typedef struct triangle triangle;

float area(int , int, int);
void sort_by_area(triangle* tr, int n) {
	/**
	* Sort an array a of the length n
	*/
    int i, j;
    triangle temp;
    
    for(i = 0; i < n-1; i++)
        for(j = 0; j < n-1; j++)
            if(area(tr[j].a, tr[j].b, tr[j].c) > area(tr[j + 1].a, tr[j + 1].b, tr[j + 1].c)) {
                temp = tr[j];
                tr[j] = tr[j + 1];
                tr[j + 1] = temp;
            }
        

    
}
float area(int a, int b, int c){
    float s;
    s  = (a + b + c)/2.0;
    
   
    return sqrt(s*(s - a)*(s - b)*(s - c)) ;
}

int main()
{
	int n;
	scanf("%d", &n);
	triangle *tr = malloc(n * sizeof(triangle));
	for (int i = 0; i < n; i++) {
		scanf("%d%d%d", &tr[i].a, &tr[i].b, &tr[i].c);
	}
	sort_by_area(tr, n);
	for (int i = 0; i < n; i++) {
		printf("%d %d %d\n", tr[i].a, tr[i].b, tr[i].c);
	}
	return 0;
}

